<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tw.mapper.EvaluationMapper">
    <resultMap id="evaluationMap" type="com.tw.domain.Evaluation">
        <id property="id" column="evaluationId"/>
        <result property="commitUri" column="evaluationCommitUri"/>
        <result property="createdAt" column="evaluationCreatedAt"/>
        <result property="userId" column="evaluationUserId"/>
        <result property="accessKey" column="evaluationAccessKey"/>
        <association property="capability" resultMap="com.tw.mapper.CapabilityMapper.capabilityMap"/>
        <association property="result" resultMap="evaluationResultMap"/>
    </resultMap>

    <resultMap id="evaluationResultMap" type="com.tw.domain.EvaluationResult">
        <id property="id" column="evaluationResultId"/>
        <result property="status" column="evaluationResultStatus"/>
        <result property="score" column="evaluationResultScore"/>
    </resultMap>

    <insert id="save" keyProperty="map.id">
        INSERT INTO evaluations (project_id, user_id, capability_id, commit_uri, access_key) values (#{projectId}, #{userId}, #{map.capability_id}, #{map.commit_uri}, #{map.accessKey})
    </insert>
    <insert id="saveResult" keyProperty="map.id">
        INSERT INTO evaluation_results (project_id, user_id, evaluation_id, score, status) VALUES
        (#{projectId}, #{userId}, #{evaluationId}, #{map.score}, #{map.status})
    </insert>
    <select id="findById" resultMap="evaluationMap">
        select
        <include refid="evaluationProps"/>,
        er.id as evaluationResultId,
        er.status as evaluationresultstatus,
        er.score as evaluationResultScore,

        a.id as capabilityId,
        a.project_id as projectId,
        a.created_at as createdAt,

        <include refid="com.tw.mapper.CapabilityMapper.solutionProps"/>,

        c.id as stackId,
        c.name as stackName
        from evaluations e
        left join evaluation_results er on er.evaluation_id = e.id and er.created_at = (select max(created_at) from evaluation_results er2 where er2.evaluation_id = e.id)
        left join capabilities a on a.id = e.capability_id
        left join solutions so on a.solution_id = so.id
        left join stacks c on a.stack_id = c.id
        where e.id = #{evaluationId}
    </select>
    <sql id="evaluationResultProps">
        er.id as evaluationResultId,
        er.status as evaluationResultStatus,
        er.score as evaluationResultScore
    </sql>
    <sql id="evaluationProps">
        e.id as evaluationId,
        e.commit_uri as evaluationCommitUri,
        e.created_at as evaluationCreatedAt,
        e.user_id as evaluationUserId,
        e.access_key as evaluationAccessKey
    </sql>
    <sql id="evaluationSql">
        select
        <include refid="evaluationProps"/>,
        <include refid="evaluationResultProps"/>,
        a.id as capabilityId,
        a.project_id as capabilityProjectId,
        a.created_at as capabilityCreatedAt,
        p.name as projectName,
        <include refid="com.tw.mapper.CapabilityMapper.solutionProps"/>,
        <include refid="com.tw.mapper.CapabilityMapper.stackProps"/>,
        <include refid="com.tw.mapper.CapabilityMapper.serviceProps"/>
        from evaluations e
        left join evaluation_results er on er.evaluation_id = e.id
        left join capabilities a on a.id = e.capability_id
        left join projects p on a.project_id = p.project_id
        left join solutions so on a.solution_id = so.id
        left join stacks st on a.stack_id = st.id
        LEFT JOIN stack_services ss ON ss.stack_id = st.id
        LEFT JOIN services se ON se.id = ss.service_id
    </sql>
    <select id="findEvaluationsBelongedToUser" resultMap="evaluationMap">
        <include refid="evaluationSql"/>
        where e.user_id = #{userId}
    </select>
    <select id="findEvaluationsBelongedToProjectUser" resultMap="evaluationMap">
        <include refid="evaluationSql"/>
        where e.user_id = #{userId} and e.project_id = #{projectId}
    </select>
</mapper>